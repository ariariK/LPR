/*
 *	usage.h
 *
 * 
 *
 *
 *
 */

#pragma once

class Usage
{
//////////////////////////////////////////////////////////////////////////////////////////////////////	
// Construction
//////////////////////////////////////////////////////////////////////////////////////////////////////	
public:
	Usage();
	virtual ~Usage();

//////////////////////////////////////////////////////////////////////////////////////////////////////	
// Attributes
//////////////////////////////////////////////////////////////////////////////////////////////////////	
public:

private:

protected:

//////////////////////////////////////////////////////////////////////////////////////////////////////	
// Operations
//////////////////////////////////////////////////////////////////////////////////////////////////////	

/////////////////////////////////////////////////////////////////////////////////////////////////////	
// Implementation
//////////////////////////////////////////////////////////////////////////////////////////////////////	

public:
  //////////////////////////////////////////////////////////////////////////////////////////////////////	
	// IPC : Shared Memory
	//////////////////////////////////////////////////////////////////////////////////////////////////////
  typedef struct os_line_data
  {
    char * val;
    int    len;
  }os_line_data;

  typedef struct MEMPACKED         
  {  
    char name1[32];       
    unsigned long MemTotal;  
    char name2[32];  
    unsigned long MemFree;  
    char name3[32];  
    unsigned long MemAvailable;  
    char name4[32];  
    unsigned long Buffers;  
    char name5[32];  
    unsigned long Cached;  
    
  }MEM_OCCUPY; 

  int Getproceminfo(MEM_OCCUPY * lpMemory);
  int ParserMemInfo(char * buffer, int size ,MEM_OCCUPY * lpMemory);
  char* os_getline(char *sin, os_line_data * line, char delim);
  //////////////////////////////////////////////////////////////////////////////////////////////////////	

private:

protected:

};