/*
 *	CameraGrab.h
 *
 * 
 *
 *
 *
 */

#pragma once
#include "Typedef.h"
#include "ipcs.h"

class CameraGrab
{
//////////////////////////////////////////////////////////////////////////////////////////////////////	
// Construction
//////////////////////////////////////////////////////////////////////////////////////////////////////	
public:
	CameraGrab();
	virtual ~CameraGrab();

//////////////////////////////////////////////////////////////////////////////////////////////////////	
// Attributes
//////////////////////////////////////////////////////////////////////////////////////////////////////	
public:

private:
	CameraPtr 	pCam;
	//INodeMap	*m_nodeMap;
	//INodeMap	*m_nodeMapTLDevice;

protected:
	string 			msg;

	bool				bSaveEnable;
	string			strSavePath;

	float				fGainValue;
	float				fGainValueLow;
	float				fGainValueHigh;

	float				fExposureValueMax;
	float				fExposureValueLow;
	float				fExposureValueHigh;

	double 			thValueLowBase, thValueHighBase; 

//////////////////////////////////////////////////////////////////////////////////////////////////////	
// Operations
//////////////////////////////////////////////////////////////////////////////////////////////////////	
public:
	int		SetCameraPtr(CameraPtr pcam);
	CameraPtr	GetCameraPtr() { return pCam; }

	int		CtrlUserModeGpio();
	int		SetLineSource();

	int		SetSaveEnable(bool enable);
	int 	SetSavePath(string path);
	int 	SetGainValue(float value);
	int		SetGainLow(float value);
	int		SetGainHigh(float value);
	int		SetExposureMax(float value);
	int		SetExposureLow(float value);
	int		SetExposureHigh(float value);
//////////////////////////////////////////////////////////////////////////////////////////////////////	
// Implementation
//////////////////////////////////////////////////////////////////////////////////////////////////////	
public:
	bool 	Init();

	int		RunGrabbing();
	int		CtrlGPIO(int fd, int value);

private:
	Ipcs	*Sm_Grab;
	Ipcs	*Sm_Res;
	Ipcs	*Mq_Grab;

	struct grab_data{
		int capWidth;
		int capHeight;
	};
	struct message{
		long msg_type;
		struct grab_data data;
	};
	
	//////////////////////////////////////////////////////////////////////////////////////////////////////	
	// IPC : Shared Memory
	//////////////////////////////////////////////////////////////////////////////////////////////////////	
	struct grab_data st_grab;
	//////////////////////////////////////////////////////////////////////////////////////////////////////	

	//////////////////////////////////////////////////////////////////////////////////////////////////////	
	// IPC : Message Queue
	//////////////////////////////////////////////////////////////////////////////////////////////////////	
	struct message msq;
	//////////////////////////////////////////////////////////////////////////////////////////////////////	


protected:

};
